name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Tests Laravel (SaaS)
  test-laravel:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: baoprod_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql
        coverage: xdebug
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      working-directory: ./saas
    
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      working-directory: ./saas
    
    - name: Generate key
      run: php artisan key:generate
      working-directory: ./saas
    
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      working-directory: ./saas
    
    - name: Create Database
      run: |
        mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "CREATE DATABASE IF NOT EXISTS baoprod_test;"
    
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: baoprod_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: php artisan test
      working-directory: ./saas

  # Tests Flutter (Mobile)
  test-flutter:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
      working-directory: ./mobile/baoprod_workforce
    
    - name: Run tests
      run: flutter test
      working-directory: ./mobile/baoprod_workforce
    
    - name: Analyze code
      run: flutter analyze
      working-directory: ./mobile/baoprod_workforce

  # Build Flutter
  build-flutter:
    runs-on: ubuntu-latest
    needs: test-flutter
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
      working-directory: ./mobile/baoprod_workforce
    
    - name: Build APK
      run: flutter build apk --release
      working-directory: ./mobile/baoprod_workforce
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: baoprod-workforce-apk
        path: mobile/baoprod_workforce/build/app/outputs/flutter-apk/app-release.apk

  # Deploy to Production
  deploy:
    runs-on: ubuntu-latest
    needs: [test-laravel, test-flutter]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Production
      run: |
        echo "Deploying to production server..."
        # Add deployment script here
        # ssh -i ~/.ssh/freepbx_deploy africwebhosting@212.227.87.11
        # cd /var/www/vhosts/africwebhosting.com/baoprod.com/projets/workforce
        # git pull origin main
        # composer install --no-dev --optimize-autoloader
        # php artisan migrate --force
        # php artisan config:cache
        # php artisan route:cache
        # php artisan view:cache